name: CI for devops final task
on:
  push: {}
  release:
    types: [published]
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag: 
        default: latest
        description: image tag

env:
  IMAGE_TITLE: abekrenev-devops-final-task
  TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Project
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: build
        uses: docker/build-push-action@v3
        with:
          context: .
          dockerfile: ./Dockerfile
          push: false
          tags: ${{ env.IMAGE_TITLE }}:${{ env.TAG }}
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Check out Project
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
          docker run ${{ env.IMAGE_TITLE }}:${{ env.TAG }} test

  publish:
    if: github.ref_name == 'main' && github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: Check out Project
        uses: actions/checkout@v3

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and publish 
        uses: docker/build-push-action@v4 
        env:
          TAG: "${{ github.event_name == 'push' && steps.date.outputs.date || github.event.release.tag_name }}"
        with:
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_TITLE }}:${{ env.TAG }}
          context: .
          push: true
